name: Haskell CI

on:
  push:
    branches: [ "main", "release" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: haskread
  REGION: us-central1
  GAR_LOCATION: us-central1-docker.pkg.dev/haskread/modulus-ai-repo
  BACKEND_URL: https://modulus-ai-backend-461848834131.southamerica-west1.run.app/api/v1

permissions:
  contents: read

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: haskell-actions/run-fourmolu@v11
        with:
          version: "latest"

  hlint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: 'Set up HLint'
      uses: haskell-actions/hlint-setup@v2
      with:
        version: '3.10'

    - name: 'Run HLint'
      uses: haskell-actions/hlint-run@v2
      with:
        path: modulus-ai-be/src/
        fail-on: warning

  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./modulus-ai-be/
        shell: bash

    services:
      postgres:
        image: pgvector/pgvector:pg17-trixie
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: tushar
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: modulus_test_db
        options: >-
          --health-cmd="pg_isready -U tushar"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Copy repo into actions 
      uses: actions/checkout@v4

    - name: Export environment variables
      run: source ./export-test-env.sh

    - name: Wait for DB to be healthy
      run: |
          for i in {1..10}; do
            pg_isready -h localhost -U tushar && exit 0
            echo "Waiting for database..."
            sleep 3
          done
          echo "Database did not become ready in time" >&2
          exit 1

    - name: install dependancies, build and export binaries.
      uses: freckle/stack-action@v5
      with:
        working-directory: ./modulus-ai-be/

  deploy-backend:
    if: github.ref == 'refs/heads/release'
    needs: test
    runs-on: ubuntu-22.04
    environment: development
    defaults:
      run:
        working-directory: ./modulus-ai-be/
        shell: bash

    steps:
    - name: Copy repo into actions 
      uses: actions/checkout@v4

    - name: install dependancies, build and export binaries.
      uses: freckle/stack-action@v5
      with:
        working-directory: ./modulus-ai-be/
        test: false
        stack-build-arguments: --copy-bins

    - name: Copy binary for docker
      run: cp /home/runner/.local/bin/modulus-ai-exe ./modulus-ai-exe

    - id: "auth"
      uses: "google-github-actions/auth@v2"
      with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

    - name: "Set up Cloud SDK"
      uses: "google-github-actions/setup-gcloud@v1"

    - name: "Use gcloud CLI"
      run: "gcloud info"

    - name: "Docker auth"
      run: |-
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

    - name: Build docker image
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-backend:$COMMIT_HASH
        docker build -f dockerfile.release -t $IMAGE_NAME .

    - name: Push image
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-backend:$COMMIT_HASH
        docker push $IMAGE_NAME
    
    - name: deploy to cloud run
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-backend:$COMMIT_HASH
        gcloud run deploy modulus-ai-backend \
          --image $IMAGE_NAME \
          --min-instances=0 \
          --region=southamerica-west1 \
          --project=haskread \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars=POSTGRES_DB=${{secrets.POSTGRES_DB}} \
          --set-env-vars=POSTGRES_USER=${{secrets.POSTGRES_USER}} \
          --set-env-vars=POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}} \
          --set-env-vars=POSTGRES_HOST=${{secrets.POSTGRES_HOST}} \
          --set-env-vars=MODULUS_DB_TIMEOUT=30 \
          --set-env-vars=MODULUS_APP_PORT=8080 \
          --set-env-vars=MODULUS_JWT_SECRET=${{secrets.MODULUS_JWT_SECRET}} \
          --set-env-vars=MODULUS_LOG_LEVEL=debug \
          --set-env-vars=MODULUS_ENVIRONMENT=development \
          --set-env-vars='MODULUS_REDIS_URL=redis://localhost:6379' \
          --set-env-vars=MODULUS_API_TIMEOUT=60 \
          --set-env-vars=MODULUS_MAILGUN_API=${{secrets.MODULUS_MAILGUN_API}} \
          --set-env-vars='MODULUS_FILE_UPLOAD_PATH=/home/appuser/app/uploads' \
          --memory 512Mi \
          --add-volume=name=gcs-1,type=cloud-storage,bucket=modulus_ai_bucket \
          --add-volume-mount=volume=gcs-1,mount-path=/home/appuser/app/uploads

  deploy-frontend:
    if: github.ref == 'refs/heads/release'
    needs: deploy-backend
    runs-on: ubuntu-22.04
    environment: development
    defaults:
      run:
        working-directory: ./modulus-ai-fe/
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Use gcloud CLI"
        run: "gcloud info"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build docker image
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-frontend:$COMMIT_HASH
          docker build -f dockerfile.release -t $IMAGE_NAME . --build-arg VITE_API_BASE_URL=${{env.BACKEND_URL}}

      - name: Push image
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-frontend:$COMMIT_HASH
          docker push $IMAGE_NAME
      
      - name: deploy to cloud run
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          IMAGE_NAME=${{ env.GAR_LOCATION }}/modulus-ai-frontend:$COMMIT_HASH
          gcloud run deploy modulus-ai-frontend \
            --image=$IMAGE_NAME \
            --min-instances=0 \
            --region=europe-west1 \
            --project=haskread
